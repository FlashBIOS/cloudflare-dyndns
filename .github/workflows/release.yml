name: Create Release on Tag

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Fetch all branches

      - name: Generate Changelog with Release Drafter
        uses: release-drafter/release-drafter@v6.1.0
        id: generate_changelog
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Up Golang
        uses: actions/setup-go@v5.4.0
        with:
          go-version-file: 'go.mod'

      - name: Install gomobile
        run: |
          go install golang.org/x/mobile/cmd/gomobile@latest
          export PATH=$PATH:~/go/bin

      - name: Setup JDK
        uses: actions/setup-java@v4.7.1
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v3.2.2
        with:
          log-accepted-android-sdk-licenses: false
          cmdline-tools-version: '12266719'
          packages: 'platforms;android-35 build-tools;35.0.0 platform-tools'

      - name: Install NDK
        run: |
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            --channel=3 \
            --install "ndk;29.0.13113456"
          echo "NDK_HOME=$ANDROID_HOME/ndk/29.0.13113456" >> $GITHUB_ENV
    

      - name: Build Release Artifacts
        run: make -j$(nproc) release-all

      - name: Archive Binaries per OS/Arch
        env:
          BINARY_NAME: cloudflare-dyndns
        run: |
          for os in $(ls bin/release); do
            for arch in $(ls bin/release/$os); do
              if [ "$os" = "windows" ]; then
                echo "Archiving for $os $arch as zip"
                # Append .exe for windows
                zip -j "${os}-${arch}.zip" "bin/release/$os/$arch/${BINARY_NAME}.exe"
              else
                echo "Archiving for $os $arch as tar.gz"
                tar -C "bin/release/$os/$arch" -czvf "${os}-${arch}.tar.gz" "$BINARY_NAME"
              fi
            done
          done

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            ${{ steps.generate_changelog.outputs.body }}
          draft: false
          prerelease: false

      - name: Install GitHub CLI (just in case)
        run: sudo apt-get update && sudo apt-get install gh -y

      - name: Upload Release Assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload "${{ github.ref_name }}" *.tar.gz *.zip
